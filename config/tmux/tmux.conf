set -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "tmux-256color"

set -g mouse on
set -g extended-keys on                   # needed by Control + Shift bindings
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on
set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on
set -g history-limit 5000                 # boost history

# -- display -------------------------------------------------------------------
set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed
set -g set-titles on          # set terminal title
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time
set -g status-interval 10     # redraw status line every 10 seconds
# activity
set -g monitor-activity on
set -g visual-activity off

run "exec sh -c 'tmux -S #{socket_path} set-environment -g TMUX_SOCKET \"#{socket_path}\"'"

# -- copy mode -----------------------------------------------------------------
bind Enter copy-mode # enter copy mode

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line
bind y run -b "tmux save-buffer - | pbcopy"

# -- tpm ----------------------------------------------------------------------
#   - installing plugins: <prefix> + I
#   - updating plugins: <prefix> + U
#   - uninstalling plugins: <prefix> + Alt + u

# Bootstrap
if "test ! -d ~/.config/tmux/plugins/tpm" \
  "run 'mkdir -p ~/.config/tmux/plugins && git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm'"

set -g @plugin 'tmux-plugins/tpm'

# -- statusbar ----------------------------------------------------------------
source-file ~/.config/tmux/tmux.statusbar.conf

# -- plugins -----------------------------------------------------------------
# Save and restore sessions
set -g @plugin 'tmux-plugins/tmux-resurrect' # ctrl-s save sessions, ctrl-r restore sessions
set -g @plugin 'tmux-plugins/tmux-continuum' # auto save sessions every 15 minutes
set -g @continuum-restore 'off'

# Select and execute command using fzf
set-environment -g TMUX_FZF_LAUNCH_KEY "Space"
set-environment -g TMUX_FZF_OPTIONS "-p -w 90% -h 90% -m --no-hscroll --exact"
set-environment -g TMUX_FZF_ORDER "pane|window|session|command|keybinding|clipboard"
set -g @plugin 'fjchen7/tmux-fzf'

# Toggle popup window
set -g @plugin "loichyan/tmux-toggle-popup"

# Switch to a pane using fzf
set -g @plugin 'fjchen7/tmux-fzf-pane-switch'
set -g @fzf_pane_switch_bind-key "Tab"
set -g @fzf_pane_switch_list-panes-format "session_name window_id pane_id"
set -g @fzf_pane_switch_window-position "center,80%,80%"
set -g @fzf_pane_switch_preview-pane-position "right,80%,,nowrap"

# Logging CLI output to a file
# - P: log output from now on
# - M-p: log text in visible range
# - M-P: log text including previous
# - M-c: clear log
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @logging-path '~/.tmux/logs'

# CPU and RAM usage
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @cpu_percentage_format "%2d%%" # printf format to use to display percentage
set -g @ram_percentage_format "%2d%%" # printf format to use to display percentage

# Navigation and resizing
set -g @plugin 'mrjones2014/smart-splits.nvim'
set -g @smart-splits_no_wrap '' # to disable wrapping. (any value disables wrapping)
set -g @smart-splits_move_left_key  'C-h' # key-mapping for navigation.
set -g @smart-splits_move_down_key  'C-j' #  --"--
set -g @smart-splits_move_up_key    'C-k' #  --"--
set -g @smart-splits_move_right_key 'C-l' #  --"--
set -g @smart-splits_resize_left_key  'C-Left' # key-mapping for resizing.
set -g @smart-splits_resize_down_key  'C-Down' #  --"--
set -g @smart-splits_resize_up_key    'C-Up' #  --"--
set -g @smart-splits_resize_right_key 'C-Right' #  --"--
set -g @smart-splits_resize_step_size '3' # change the step-size for resizing.

run '$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm'

# -- keybindings --------------------------------------------------------------
set -gu prefix2
unbind C-b
set -g prefix C-s
bind C-s send-prefix

bind r run "sh -c 'tmux source-file $XDG_CONFIG_HOME/tmux/tmux.conf'" \; display "tmux.conf sourced"

bind -n F12 run "#{@popup-toggle} --toggle-key '-n F12' -w90% -h90% -d'#{pane_current_path}' --name 'Scratchpad_#{pane_id}' -T 'Scratchpad' -E"
bind -n F11 run "#{@popup-toggle} --toggle-key '-n F10' --toggle-key '-n q' -w90% -h90% -d'#{pane_current_path}' --name 'LazyGit_#{pane_current_path}' -T 'LazyGit #{pane_current_path}' -E 'lazygit'"
bind -n F10 display-popup -w 90% -h 90% -d '#{pane_current_path}' -T "Edit" -E 'file=$(fzf); if [ -n "$file" ]; then nvim "$file"; fi'
bind -n F9 display-popup -w 100% -h 90% -T "Tmux Key Bindings" -E "tmux list-keys | vim -R -"

bind C-c new-session

bind - split-window -v
bind | split-window -h
bind -r C-M-h swap-pane -D
bind -r C-M-j swap-pane -U
bind -r C-M-k swap-pane -D
bind -r C-M-l swap-pane -U
bind -r 0 next-layout
bind -r M-0 rotate-window
bind x kill-pane
bind C-o select-pane -t :.+

bind -r C-p previous-window
bind -r C-n next-window
bind -r p previous-window
bind -r n next-window
bind -r C-M-n swap-window -t -1 \; select-window -t -1
bind -r C-M-p swap-window -t +1 \; select-window -t +1
# bind C-s last-window      # make pane numbering consistent with windows

bind F2 command-prompt -I "#W" { rename-window "%%" }

bind b list-buffers     # list all paste text buffers
bind v paste-buffer -p  # paste most recent paste text buffer
bind V choose-buffer    # choose which text to paste from

# find session
# bind C-f command-prompt -p find-session 'switch-client -t %%'
# session navigation
# bind BTab switch-client -l  # move to last session

# run "exec sh -c 'tmux set-environment -g TMUX_CONF \"~/.config/tmux/tmux.conf\"'"
# toggle mouse
bind m run "sh -c 'old=$(tmux show -gv mouse); new=\"\"; if [ \"\$old\" = \"on\" ]; then new=\"off\"; else new=\"on\"; fi; tmux set -g mouse \$new'"
# facebook pathpicker
# bind F run "cut -c3- ~/.config/tmux/tmux.conf | sh -s _fpp '#{pane_id}' '#{pane_current_path}'"
# _fpp() {
#   tmux capture-pane -J -S - -E - -b "fpp-$1" -t "$1"
#   tmux split-window -c "$2" "'$TMUX_PROGRAM' ${TMUX_SOCKET:+-S "$TMUX_SOCKET"} show-buffer -b 'fpp-$1' | fpp || true; '$TMUX_PROGRAM' ${TMUX_SOCKET:+-S "$TMUX_SOCKET"} delete-buffer -b 'fpp-$1'"
# }
