" Before using this configuration, In IntelliJ install these plugins:
" - IdeaVim
" - IdeaVim-EasyMotion
" - IdeaVimExtension
"
""" Map leader to space ---------------------
nnoremap " " <Nop>
let mapleader=" "

""" Common settings -------------------------
set clipboard= " not sync with system clipboard
set magic  " regular expression support
" search
set hlsearch " highlight search text
set incsearch " highlight first matched text immediately
set ignorecase smartcase " capital insensitive when typing lowercase, but not when typing uppercase
" turn off bell
set belloff=all
set novisualbell noerrorbells
set whichwrap=<,>,[,],b,s,h,l

""" key map -------------------------
nmap q :q<cr>
" How to find action:
" - :actionlist [pattern]
" Close group
" nmap <C-q> <Action>(CloseAllEditors)
" nmap <tab> <Action>(GotoFile)
nmap <leader>u <Action>(Vcs.RollbackChangedLines)
nmap ) <Action>(VcsShowNextChangeMarker)
nmap ( <Action>(VcsShowPrevChangeMarker)
nmap <cr> <Action>(VcsShowCurrentChangeMarker)

" move to wrapped line
nnoremap j gj
nnoremap k gk
nnoremap 0 g^
nnoremap ^ g0
nnoremap $ g$
xnoremap $ g$h
nnoremap Y y$

nnoremap v m`v
nnoremap V m`V
nnoremap <C-v> m`<C-v>
nnoremap gv m`gv

" not copy when paste in visual mode
vmap p "_dP
nnoremap U <c-r>

" https://github.com/mhinz/vim-galore#dont-lose-selection-when-shifting-sidewards
xnoremap <  <gv
xnoremap >  >gv
" https://github.com/mhinz/vim-galore#saner-behavior-of-n-and-n
nnoremap <expr> n  'Nn'[v:searchforward]
nnoremap <expr> N  'nN'[v:searchforward]

" windows
" Note: Mappings to <Action> don't work with noremap
nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l
nmap <C-S-h> <Action>(StretchSplitToLeft)
nmap <C-S-j> <Action>(StretchSplitToBotto)
nmap <C-S-k> <Action>(StretchSplitToTop)
nmap <C-S-l> <Action>(StretchSplitToRight)
nmap <C-w>q <Action>(CloseEditorsGroup)
nmap <C-w>o <Action>(CloseAllEditorsButActive)
nmap <C-w>p <Action>(PinActiveEditorTab)
nmap <C-w>u <Action>(Unsplit)
nmap <C-w>U <Action>(UnsplitAll)
nmap <C-w>x <Action>(ChangeSplitOrientation)
nmap <C-w>z <Action>(MaximizeEditorInSplit)
nmap K <Action>(ShowHoverInfo)

""" settings in settings
sethandler <C-;> a:vim
sethandler <C-S-;> a:vim
sethandler <M-;> a:vim
sethandler <M-S-;> a:vim
sethandler <C-D> a:vim
sethandler <C-H> a:vim
sethandler <C-J> a:vim
sethandler <C-K> a:vim
sethandler <C-L> a:vim
sethandler <C-O> a:vim

""" Plugins  --------------------------------
set easymotion
set commentary
set surround
set highlightedyank
set textobj-indent
set argtextobj
set textobj-entire
set multiple-cursors
set vim-paragraph-motion
set exchange
set matchit

""" Easymotion  --------------------------------
" https://github.com/AlexPl292/IdeaVim-EasyMotion
" Disable default mapping
let g:EasyMotion_do_mapping = 0
" Search by typing
" map <tab> <Plug>(easymotion-s)
" map <C-;> <Plug>(easymotion-bd-jk)
" Search by char
map f <Plug>(easymotion-bd-f)
" map F <Plug>(easymotion-F)
omap f <Plug>(easymotion-bd-t)
" omap F <Plug>(easymotion-T)

" targets.vim
" let g:targets_aiAI = 'aIAi'
" autocmd User targets#mappings#user call targets#mappings#extend({
" \ 'a': {'argument': [{'o': '[({[]', 'c': '[]})]', 's': ','}]},
" \ 'b': {'pair': [{'o':'(', 'c':')'}, {'o':'[', 'c':']'}, {'o':'{', 'c':'}'}, {'o':'<', 'c':'>'}]},
" \ })
" "  Prefer multiline targets around cursor over distant targets within cursor line:
" "  https://github.com/wellle/targets.vim#gtargets_seekranges
" let g:targets_seekRanges = 'cc cr cb cB lc ac Ac lr lb ar ab lB Ar aB Ab AB rr ll rb al rB Al bb aa bB Aa BB AA'
"
" " multiple-cursor.vim
" let g:multi_cursor_select_all_key = 'g<C-n>'
"
" " expand-region.vim
" map _ <Plug>(expand_region_expand)
" map + <Plug>(expand_region_shrink)
" let g:expand_region_use_select_mode = 0
